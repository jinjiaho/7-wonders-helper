---
import AddPlayerForm from "./AddPlayerForm.astro";
---

<style is:global>
  #tally-component {
    text-align: center;
    width: 100%;
    row-gap: 1.5rem;
    max-width: 40rem;

    & header {
      gap: 0.5rem;

      & * {
        margin: 0;
      }
    }
  }

  #tally-main {
    width: 100%;
  }

  #players {
    flex-direction: row;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;

    & .player-card {
      --color: #fe9234;
      justify-content: center;
      height: 4.5rem;
      aspect-ratio: 1;
      padding: 1rem;
      gap: 0.5rem;
      border-radius: 0.5rem;
      text-align: center;
      border: 1px solid var(--color);
      color: var(--color);
      background-color: rgba(255, 255, 255, 0.5);
    }
  }

  #tally-action {
    gap: 0.5rem;
  }

  .error {
    flex-basis: 100%;
    flex-shrink: 0;
    color: red;
    text-align: left;
    font-size: 0.9rem;
  }

  #next {
    align-self: stretch;
    padding: 1rem;
    border-radius: 0.5rem;
    border: 1px solid #ccc;

    &:disabled {
      opacity: 0.5;
    }
  }
</style>
<seven-wonders-tally id="tally-component">
  <header id="step-header">
    <h2 id="step-title">Step 1: Add Players</h2>
    <p id="step-instructions">Up to 10 chars, letters or numbers, no spaces</p>
  </header>
  <section id="tally-action">
    <AddPlayerForm classes="step-0" />
    <div class="error hide"></div>
  </section>

  <section id="tally-display">
    <div id="players" class="hide"></div>
  </section>
  <button role="button" id="next" disabled>Next step</button>
</seven-wonders-tally>
<script>
  import { PLAYER_LIMIT, TALLY_COMPONENTS } from "../config";
  import type { AddPlayerEvent } from "../types";

  class SevenWondersTally extends HTMLElement {
    constructor() {
      super();
      let step = 0;
      const container = this;
      const playersDiv = this.querySelector("#players") as HTMLElement;
      const nextStepBtn = this.querySelector("#next") as HTMLButtonElement;
      const header = this.querySelector("#step-header") as HTMLElement;
      const error = this.querySelector(".error") as HTMLElement;
      const addPlayerForm = this.querySelector(
        "add-player-form",
      ) as HTMLElement;
      sessionStorage.setItem("players", JSON.stringify({}));

      nextStepBtn.addEventListener("click", nextStep);

      window.addEventListener("error", (e) => {
        e.preventDefault();
        error.textContent = e.error.message;
        error.classList.remove("hide");
      });

      // @ts-ignore
      addPlayerForm.addEventListener(
        "add-player",
        function (e: AddPlayerEvent) {
          e.preventDefault();
          removeError();

          const playerCard = document.createElement("div");
          playerCard.classList.add("player-card");
          playerCard.style.setProperty("--color", e.detail.playerColor);
          const playerName = document.createElement("h4");
          playerName.classList.add("player-name");
          playerName.textContent = e.detail.playerName;
          const playerScore = document.createElement("div");
          playerScore.classList.add("player-score");
          playerScore.textContent = "0";
          playerCard.appendChild(playerName);
          playerCard.appendChild(playerScore);
          playersDiv.appendChild(playerCard);

          const players = JSON.parse(sessionStorage.getItem("players")!);
          const numPlayers = Object.keys(players).length;
          if (numPlayers < 2) {
            playersDiv.classList.remove("hide");
          }
          if (numPlayers > 2) {
            enableNextStep();
          }
          if (numPlayers === PLAYER_LIMIT) {
            addPlayerForm.classList.add("hide");
          }
        },
      );

      function enableNextStep() {
        nextStepBtn.removeAttribute("disabled");
      }

      function nextStep() {
        const tallyComp = TALLY_COMPONENTS[step];
        const titleEl = header.querySelector("#step-title") as HTMLElement;
        titleEl.textContent = `Step ${step + 2}: ${tallyComp.name}`;
        const instructionEl = header.querySelector(
          "#step-instructions",
        ) as HTMLElement;
        instructionEl.textContent = tallyComp.description;
        removeStepItems(step);
        step += 1;
        nextStepBtn.setAttribute("disabled", "true");
      }

      function removeStepItems(index: number) {
        const stepItems = Array.from(
          container.querySelectorAll(`.step-${index}`),
        );
        for (let item of stepItems) {
          item.remove();
        }
      }

      function removeError() {
        error.textContent = "";
        error.classList.add("hide");
      }
    }
  }
  customElements.define("seven-wonders-tally", SevenWondersTally);
</script>
